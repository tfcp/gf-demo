// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.1
// source: v1/remote.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteId uint32 `protobuf:"varint,1,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
}

func (x *RemoteInfoReq) Reset() {
	*x = RemoteInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_remote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteInfoReq) ProtoMessage() {}

func (x *RemoteInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_remote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteInfoReq.ProtoReflect.Descriptor instead.
func (*RemoteInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_remote_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteInfoReq) GetRemoteId() uint32 {
	if x != nil {
		return x.RemoteId
	}
	return 0
}

type RemoteInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age      uint32 `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	RemoteId uint32 `protobuf:"varint,3,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
}

func (x *RemoteInfoRes) Reset() {
	*x = RemoteInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_remote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteInfoRes) ProtoMessage() {}

func (x *RemoteInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_remote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteInfoRes.ProtoReflect.Descriptor instead.
func (*RemoteInfoRes) Descriptor() ([]byte, []int) {
	return file_v1_remote_proto_rawDescGZIP(), []int{1}
}

func (x *RemoteInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoteInfoRes) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *RemoteInfoRes) GetRemoteId() uint32 {
	if x != nil {
		return x.RemoteId
	}
	return 0
}

type RemoteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteId uint32 `protobuf:"varint,1,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
}

func (x *RemoteListReq) Reset() {
	*x = RemoteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_remote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteListReq) ProtoMessage() {}

func (x *RemoteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_remote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteListReq.ProtoReflect.Descriptor instead.
func (*RemoteListReq) Descriptor() ([]byte, []int) {
	return file_v1_remote_proto_rawDescGZIP(), []int{2}
}

func (x *RemoteListReq) GetRemoteId() uint32 {
	if x != nil {
		return x.RemoteId
	}
	return 0
}

type RemoteListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RemoteInfoRes `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RemoteListRes) Reset() {
	*x = RemoteListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_remote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteListRes) ProtoMessage() {}

func (x *RemoteListRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_remote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteListRes.ProtoReflect.Descriptor instead.
func (*RemoteListRes) Descriptor() ([]byte, []int) {
	return file_v1_remote_proto_rawDescGZIP(), []int{3}
}

func (x *RemoteListRes) GetList() []*RemoteInfoRes {
	if x != nil {
		return x.List
	}
	return nil
}

var File_v1_remote_proto protoreflect.FileDescriptor

var file_v1_remote_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x2c, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0x74, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_remote_proto_rawDescOnce sync.Once
	file_v1_remote_proto_rawDescData = file_v1_remote_proto_rawDesc
)

func file_v1_remote_proto_rawDescGZIP() []byte {
	file_v1_remote_proto_rawDescOnce.Do(func() {
		file_v1_remote_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_remote_proto_rawDescData)
	})
	return file_v1_remote_proto_rawDescData
}

var file_v1_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_remote_proto_goTypes = []interface{}{
	(*RemoteInfoReq)(nil), // 0: v1.RemoteInfoReq
	(*RemoteInfoRes)(nil), // 1: v1.RemoteInfoRes
	(*RemoteListReq)(nil), // 2: v1.RemoteListReq
	(*RemoteListRes)(nil), // 3: v1.RemoteListRes
}
var file_v1_remote_proto_depIdxs = []int32{
	1, // 0: v1.RemoteListRes.list:type_name -> v1.RemoteInfoRes
	0, // 1: v1.Remote.RemoteInfo:input_type -> v1.RemoteInfoReq
	2, // 2: v1.Remote.RemoteList:input_type -> v1.RemoteListReq
	1, // 3: v1.Remote.RemoteInfo:output_type -> v1.RemoteInfoRes
	3, // 4: v1.Remote.RemoteList:output_type -> v1.RemoteListRes
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_remote_proto_init() }
func file_v1_remote_proto_init() {
	if File_v1_remote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_remote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_remote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_remote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_remote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_remote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_remote_proto_goTypes,
		DependencyIndexes: file_v1_remote_proto_depIdxs,
		MessageInfos:      file_v1_remote_proto_msgTypes,
	}.Build()
	File_v1_remote_proto = out.File
	file_v1_remote_proto_rawDesc = nil
	file_v1_remote_proto_goTypes = nil
	file_v1_remote_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	RemoteInfo(ctx context.Context, in *RemoteInfoReq, opts ...grpc.CallOption) (*RemoteInfoRes, error)
	RemoteList(ctx context.Context, in *RemoteListReq, opts ...grpc.CallOption) (*RemoteListRes, error)
}

type remoteClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteClient(cc grpc.ClientConnInterface) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) RemoteInfo(ctx context.Context, in *RemoteInfoReq, opts ...grpc.CallOption) (*RemoteInfoRes, error) {
	out := new(RemoteInfoRes)
	err := c.cc.Invoke(ctx, "/v1.Remote/RemoteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) RemoteList(ctx context.Context, in *RemoteListReq, opts ...grpc.CallOption) (*RemoteListRes, error) {
	out := new(RemoteListRes)
	err := c.cc.Invoke(ctx, "/v1.Remote/RemoteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	RemoteInfo(context.Context, *RemoteInfoReq) (*RemoteInfoRes, error)
	RemoteList(context.Context, *RemoteListReq) (*RemoteListRes, error)
}

// UnimplementedRemoteServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteServer struct {
}

func (*UnimplementedRemoteServer) RemoteInfo(context.Context, *RemoteInfoReq) (*RemoteInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoteInfo not implemented")
}
func (*UnimplementedRemoteServer) RemoteList(context.Context, *RemoteListReq) (*RemoteListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoteList not implemented")
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_RemoteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).RemoteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Remote/RemoteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).RemoteInfo(ctx, req.(*RemoteInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_RemoteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).RemoteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Remote/RemoteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).RemoteList(ctx, req.(*RemoteListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RemoteInfo",
			Handler:    _Remote_RemoteInfo_Handler,
		},
		{
			MethodName: "RemoteList",
			Handler:    _Remote_RemoteList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/remote.proto",
}
